@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/MasterLayout.cshtml";
    ShopTheThaoContext context = new ShopTheThaoContext();
    var categoryList = context.Categories.ToList();
}
@* @using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<Website_Sport.Models.Product> *@
@model List<Website_Sport.Models.Product>
<link rel="stylesheet" href="../MasterLayout/style.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    .header {
        background: initial !important;
    }
    /* Dropdown Button */
    .dropbtn {
        background-color: #04AA6D;
        color: white;
        padding: 12px;
        font-size: 16px;
        border: none;
    }

    /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        /* Links inside the dropdown */
        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            /* Change color of dropdown links on hover */
            .dropdown-content a:hover {
                background-color: #ddd;
            }

    /* Show the dropdown menu on hover */
    .dropdown:hover .dropdown-content {
        display: block;
    }

    /* Change the background color of the dropdown button when the dropdown content is shown */
    .dropdown:hover .dropbtn {
        background-color: #3e8e41;
    }
    /*CSS Search*/
    .form {
        --input-text-color: red;
        --input-bg-color: #fff;
        --focus-input-bg-color: transparent;
        --text-color: #949faa;
        --active-color: #1b9bee;
        --width-of-input: 200px;
        --inline-padding-of-input: 1.2em;
        --gap: 0.9rem;
    }
    /* form style */
    .form {
        font-size: 0.9rem;
        display: flex;
        gap: 0.5rem;
        align-items: center;
        width: var(--width-of-input);
        position: relative;
        isolation: isolate;
    }
    /* a fancy bg for showing background and border when focus. */
    .fancy-bg {
        position: absolute;
        width: 100%;
        inset: 0;
        background: var(--input-bg-color);
        border-radius: 30px;
        height: 100%;
        z-index: -1;
        pointer-events: none;
        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
    }
    /* label styling */
    label {
        width: 100%;
        padding: 0.8em;
        height: 40px;
        padding-inline: var(--inline-padding-of-input);
        display: flex;
        align-items: center;
    }

    .search, .close-btn {
        position: absolute;
    }
    /* styling search-icon */
    .search {
        fill: var(--text-color);
        left: var(--inline-padding-of-input);
    }
    /* svg -- size */
    svg {
        width: 17px;
        display: block;
    }
    /* styling of close button */
    .close-btn {
        border: none;
        right: var(--inline-padding-of-input);
        box-sizing: border-box;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        padding: 0.1em;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: var(--active-color);
        opacity: 0;
        visibility: hidden;
    }
    /* styling of input */
    .input {
        color: var(--input-text-color);
        width: 100%;
        margin-inline: min(2em,calc(var(--inline-padding-of-input) + var(--gap)));
        background: none;
        border: none;
    }

        .input:focus {
            outline: none;
        }

        .input::placeholder {
            color: var(--text-color)
        }
        /* input background change in focus */
        .input:focus ~ .fancy-bg {
            border: 1px solid var(--active-color);
            background: var(--focus-input-bg-color);
        }
        /* search icon color change in focus */
        .input:focus ~ .search {
            fill: var(--active-color);
        }
        /* showing close button when typing */
        .input:valid ~ .close-btn {
            opacity: 1;
            visibility: visible;
        }
    /* this is for the default background in input,when selecting autofill options -- you can remove this code if you do not want to override the browser style.  */
    input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    input:-webkit-autofill:active {
        -webkit-transition: "color 9999s ease-out, background-color 9999s ease-out";
        -webkit-transition-delay: 9999s;
    }
</style>
<div class="small-container">
    <div class="row row-2" style="margin-top: 50px;
    margin-right: auto;
    margin-bottom: 50px;
    margin-left: auto;
}">
        <div class="dropdown">
            <form class="form" asp-action="Index" asp-controller="Product" method="get">
                <label for="search">
                    <input class="input" type="text" required="" name="type" placeholder="Search product" id="search">
                    <div class="fancy-bg"></div>
                    <div class="search">
                        <svg viewBox="0 0 24 24" aria-hidden="true" class="r-14j79pv r-4qtqp9 r-yyyyoo r-1xvli5t r-dnmrzs r-4wgw6l r-f727ji r-bnwqim r-1plcrui r-lrvibr">
                            <g>
                                <path d="M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z"></path>
                            </g>
                        </svg>
                    </div>
                    <button class="close-btn" type="reset">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                        </svg>
                    </button>
                </label>
                <button type="submit" hidden>Search</button>
            </form>
        </div>
        <div class="dropdown">
            <button class="dropbtn">Categories</button>
            <div class="dropdown-content">
                <a href="/products">All products</a>
                @foreach (var cate in categoryList)
                {
                    <a href="/get-product-category/?category=@cate.CategoryName">@cate.CategoryName</a>
                }
            </div>
        </div>
    </div>
    <div class="row row-2" style="margin-top: 50px;
    margin-right: auto;
    margin-bottom: 50px;
    margin-left: auto;
}">
        <h2>Products</h2>
        <select>
            <option>Default Shop</option>
            <option>Short by price</option>
            <option>Short by popularity</option>
            <option>Short by Rating</option>
            <option>Short by Sale</option>
        </select>
    </div>

    <div class="row">
        @foreach (var item in Model)
        {

            <div class="col-4">
                <a href="/product-detail/@item.ProductId">
                    @if (item.Images.Any())
                    {
                        <img src="http://localhost:5177/api/product@(item.Images.First().Image1)"
                             alt="Product Image">
                    }
                    else
                    {
                        <h4 style="color: red">No images available!</h4>
                    }
                    <h4>@item.Type</h4>
                    <div class="rating">
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star-o"></i>
                    </div>
                    <p>@item.Price ₫</p>
                </a>
            </div>
        }

        @*    <div class="page-btn">
        <span>
        @Html.PagedListPager(Model, page=>Url.Action("Index", new {page=page}))
        </span>
        </div> *@
     @*    <nav aria-label="Page navigation example" style="margin-bottom: 12px">
            <ul class="pagination">
                <li class="page-item"> @Html.PagedListPager(Model, page=>Url.Action("Index", new {page=page}))</li>
            </ul>
        </nav> *@
    </div>

    <!-- ------------------- js for toggle menu-------------- -->
    <script>
        var MenuItems = document.getElementById("MenuItems");

        MenuItems.style.maxHeight = "0px";

        function menutoggle() {
            if (MenuItems.style.maxHeight == "0px") {
                MenuItems.style.maxHeight = "200px";
            }
            else {
                MenuItems.style.maxHeight = "0px";
            }
        }

    </script>


